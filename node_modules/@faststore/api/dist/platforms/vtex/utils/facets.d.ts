export interface SelectedFacet {
    key: string;
    value: string;
}
export interface CrossSellingFacet {
    key: keyof typeof FACET_CROSS_SELLING_MAP;
    value: string;
}
export declare const FACET_CROSS_SELLING_MAP: {
    readonly buy: "whoboughtalsobought";
    readonly view: "whosawalsosaw";
    readonly similars: "similars";
    readonly viewAndBought: "whosawalsobought";
    readonly accessories: "accessories";
    readonly suggestions: "suggestions";
};
/**
 * Transform facets from the store to VTEX platform facets.
 * For instance, the channel in Store becomes trade-policy and regionId in VTEX's realm
 * */
export declare const transformSelectedFacet: ({ key, value }: SelectedFacet) => {
    key: string;
    value: string;
}[] | {
    key: string;
    value: string;
};
export declare const parseRange: (range: string) => [number, number] | null;
export declare const isCrossSelling: (x: string) => x is "similars" | "accessories" | "suggestions" | "buy" | "view" | "viewAndBought";
export declare const findCrossSelling: (facets?: SelectedFacet[] | null | undefined) => CrossSellingFacet | null;
export declare const findSlug: (facets?: SelectedFacet[] | null | undefined) => string | null;
export declare const findSkuId: (facets?: SelectedFacet[] | null | undefined) => string | null;
export declare const findLocale: (facets?: SelectedFacet[] | null | undefined) => string | null;
export declare const findChannel: (facets?: SelectedFacet[] | null | undefined) => string | null;
