declare type ErrorType = 'BadRequestError' | 'NotFoundError' | 'RedirectError';
interface Extension {
    type: ErrorType;
    status: number;
}
declare class FastStoreError<T extends Extension = Extension> extends Error {
    extensions: T;
    constructor(extensions: T, message?: string);
}
export declare class BadRequestError extends FastStoreError {
    constructor(message?: string);
}
export declare class NotFoundError extends FastStoreError {
    constructor(message?: string);
}
export declare const isFastStoreError: (error: any) => error is FastStoreError<Extension>;
export declare const isNotFoundError: (error: any) => error is NotFoundError;
export declare const isBadRequestError: (error: any) => error is BadRequestError;
export {};
