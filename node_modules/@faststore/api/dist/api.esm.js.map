{"version":3,"file":"api.esm.js","sources":["../src/platforms/vtex/clients/fetch.ts","../src/platforms/vtex/clients/commerce/index.ts","../src/platforms/vtex/clients/search/index.ts","../src/platforms/vtex/clients/sp/index.ts","../src/platforms/vtex/clients/index.ts","../src/platforms/vtex/loaders/salesChannel.ts","../src/platforms/vtex/loaders/simulation.ts","../src/platforms/vtex/utils/enhanceSku.ts","../src/platforms/errors.ts","../src/platforms/vtex/loaders/sku.ts","../src/platforms/vtex/loaders/collection.ts","../src/platforms/vtex/loaders/index.ts","../src/platforms/vtex/utils/productStock.ts","../src/platforms/vtex/resolvers/aggregateOffer.ts","../src/platforms/vtex/resolvers/aggregateRating.ts","../src/platforms/vtex/utils/slugify.ts","../src/platforms/vtex/resolvers/collection.ts","../src/platforms/vtex/utils/channel.ts","../src/platforms/vtex/utils/facets.ts","../src/platforms/vtex/utils/orderStatistics.ts","../src/platforms/vtex/resolvers/facet.ts","../src/platforms/vtex/resolvers/faceValue.ts","../src/platforms/vtex/utils/md5.ts","../src/platforms/vtex/utils/propertyValue.ts","../src/platforms/vtex/resolvers/validateCart.ts","../src/platforms/vtex/resolvers/validateSession.ts","../src/platforms/vtex/resolvers/mutation.ts","../src/platforms/vtex/resolvers/objectOrString.ts","../src/platforms/vtex/resolvers/offer.ts","../src/platforms/vtex/utils/canonical.ts","../src/platforms/vtex/utils/enhanceCommercialOffer.ts","../src/platforms/vtex/resolvers/product.ts","../src/platforms/vtex/resolvers/productGroup.ts","../src/platforms/vtex/resolvers/propertyValue.ts","../src/platforms/vtex/utils/contex.ts","../src/platforms/vtex/utils/sort.ts","../src/platforms/vtex/utils/sku.ts","../src/platforms/vtex/resolvers/query.ts","../src/platforms/vtex/resolvers/review.ts","../src/platforms/vtex/resolvers/searchResult.ts","../src/platforms/vtex/resolvers/seo.ts","../src/platforms/vtex/index.ts","../src/typeDefs/index.ts","../src/index.ts"],"sourcesContent":["import fetch from 'isomorphic-unfetch'\n\nexport const fetchAPI = async (info: RequestInfo, init?: RequestInit) => {\n  const response = await fetch(info, init)\n\n  if (response.ok) {\n    return response.status !== 204 ? response.json() : undefined\n  }\n\n  console.error(info, init, response)\n  const text = await response.text()\n\n  throw new Error(text)\n}\n","import { FACET_CROSS_SELLING_MAP } from '../../utils/facets'\nimport { fetchAPI } from '../fetch'\n\nimport type { PortalProduct } from './types/Product'\nimport type { Context, Options } from '../../index'\nimport type { Brand } from './types/Brand'\nimport type { CategoryTree } from './types/CategoryTree'\nimport type { OrderForm, OrderFormInputItem } from './types/OrderForm'\nimport type { PortalPagetype } from './types/Portal'\nimport type { Region, RegionInput } from './types/Region'\nimport type {\n  Simulation,\n  SimulationArgs,\n  SimulationOptions,\n} from './types/Simulation'\nimport type { Session } from './types/Session'\nimport type { Channel } from '../../utils/channel'\nimport type { SalesChannel } from './types/SalesChannel'\n\ntype ValueOf<T> = T extends Record<string, infer K> ? K : never\n\nconst BASE_INIT = {\n  method: 'POST',\n  headers: {\n    'content-type': 'application/json',\n  },\n}\n\nexport const VtexCommerce = (\n  { account, environment }: Options,\n  ctx: Context\n) => {\n  const base = `https://${account}.${environment}.com.br`\n\n  return {\n    catalog: {\n      salesChannel: (sc: string): Promise<SalesChannel> =>\n        fetchAPI(`${base}/api/catalog_system/pub/saleschannel/${sc}`),\n      brand: {\n        list: (): Promise<Brand[]> =>\n          fetchAPI(`${base}/api/catalog_system/pub/brand/list`),\n      },\n      category: {\n        tree: (depth = 3): Promise<CategoryTree[]> =>\n          fetchAPI(`${base}/api/catalog_system/pub/category/tree/${depth}`),\n      },\n      portal: {\n        pagetype: (slug: string): Promise<PortalPagetype> =>\n          fetchAPI(`${base}/api/catalog_system/pub/portal/pagetype/${slug}`),\n      },\n      products: {\n        crossselling: (\n          { type, productId, groupByProduct = true }: {\n            type: ValueOf<typeof FACET_CROSS_SELLING_MAP>;\n            productId: string;\n            groupByProduct?: boolean;\n          },\n        ): Promise<PortalProduct[]> => {\n          const params = new URLSearchParams({\n            sc: ctx.storage.channel.salesChannel,\n            groupByProduct: groupByProduct.toString(),\n          })\n\n          return fetchAPI(\n            `${base}/api/catalog_system/pub/products/crossselling/${type}/${productId}?${params}`,\n          )\n        },\n      },\n    },\n    checkout: {\n      simulation: (\n        args: SimulationArgs,\n        { salesChannel }: SimulationOptions = ctx.storage.channel\n      ): Promise<Simulation> => {\n        const params = new URLSearchParams({\n          sc: salesChannel,\n        })\n\n        return fetchAPI(\n          `${base}/api/checkout/pub/orderForms/simulation?${params.toString()}`,\n          {\n            ...BASE_INIT,\n            body: JSON.stringify(args),\n          }\n        )\n      },\n      orderForm: ({\n        id,\n        refreshOutdatedData = true,\n        channel = ctx.storage.channel,\n      }: {\n        id: string\n        refreshOutdatedData?: boolean\n        channel?: Required<Channel>\n      }): Promise<OrderForm> => {\n        const { salesChannel } = channel\n        const params = new URLSearchParams({\n          refreshOutdatedData: refreshOutdatedData.toString(),\n          sc: salesChannel,\n        })\n\n        return fetchAPI(\n          `${base}/api/checkout/pub/orderForm/${id}?${params.toString()}`,\n          BASE_INIT\n        )\n      },\n      updateOrderFormItems: ({\n        id,\n        orderItems,\n        allowOutdatedData = 'paymentData',\n        salesChannel = ctx.storage.channel.salesChannel,\n      }: {\n        id: string\n        orderItems: OrderFormInputItem[]\n        allowOutdatedData?: 'paymentData'\n        salesChannel?: string\n      }): Promise<OrderForm> => {\n        const params = new URLSearchParams({\n          allowOutdatedData,\n          sc: salesChannel,\n        })\n\n        return fetchAPI(\n          `${base}/api/checkout/pub/orderForm/${id}/items?${params}`,\n          {\n            ...BASE_INIT,\n            body: JSON.stringify({ orderItems }),\n            method: 'PATCH',\n          }\n        )\n      },\n      setCustomData: ({\n        id,\n        appId,\n        key,\n        value,\n      }: {\n        id: string\n        appId: string\n        key: string\n        value: string\n      }): Promise<OrderForm> => {\n        return fetchAPI(\n          `${base}/api/checkout/pub/orderForm/${id}/customData/${appId}/${key}`,\n          {\n            ...BASE_INIT,\n            body: JSON.stringify({ value }),\n            method: 'PUT',\n          },\n        )\n      },\n      region: async ({\n        postalCode,\n        country,\n        salesChannel,\n      }: RegionInput): Promise<Region> => {\n        return fetchAPI(\n          `${base}/api/checkout/pub/regions/?postalCode=${postalCode}&country=${country}&sc=${\n            salesChannel ?? ''\n          }`\n        )\n      },\n    },\n    session: (search: string): Promise<Session> => {\n      const params = new URLSearchParams(search)\n\n      params.set(\n        'items',\n        'profile.id,profile.email,profile.firstName,profile.lastName,store.channel,store.countryCode,store.cultureInfo,store.currencyCode,store.currencySymbol'\n      )\n\n      return fetchAPI(`${base}/api/sessions?${params.toString()}`, {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          cookie: ctx.headers.cookie,\n        },\n        body: '{}',\n      })\n    },\n  }\n}\n","import { fetchAPI } from '../fetch'\nimport type { IStoreSelectedFacet } from '../../../../__generated__/schema'\nimport type { Context, Options } from '../../index'\nimport type { SelectedFacet } from '../../utils/facets'\nimport type {\n  Facet,\n  FacetValueBoolean,\n  FacetSearchResult,\n} from './types/FacetSearchResult'\nimport type {\n  ProductSearchResult,\n  Suggestion,\n} from './types/ProductSearchResult'\n\nexport type Sort =\n  | 'price:desc'\n  | 'price:asc'\n  | 'orders:desc'\n  | 'name:desc'\n  | 'name:asc'\n  | 'release:desc'\n  | 'discount:desc'\n  | ''\n\nexport interface SearchArgs {\n  query?: string\n  page: number\n  count: number\n  type: 'product_search' | 'facets'\n  sort?: Sort\n  selectedFacets?: SelectedFacet[]\n  fuzzy?: '0' | '1' | 'auto'\n  hideUnavailableItems?: boolean\n}\n\nexport interface ProductLocator {\n  field: 'id' | 'slug'\n  value: string\n}\n\nconst POLICY_KEY = 'trade-policy'\nconst REGION_KEY = 'region-id'\nconst CHANNEL_KEYS = new Set([POLICY_KEY, REGION_KEY])\n\nexport const isFacetBoolean = (\n  facet: Facet\n): facet is Facet<FacetValueBoolean> => facet.type === 'TEXT'\n\nexport const IntelligentSearch = (\n  { account, environment, hideUnavailableItems }: Options,\n  ctx: Context\n) => {\n  const base = `https://${account}.${environment}.com.br/api/io`\n\n  const getPolicyFacet = (): IStoreSelectedFacet | null => {\n    const { salesChannel } = ctx.storage.channel\n\n    if (!salesChannel) {\n      return null\n    }\n\n    return {\n      key: POLICY_KEY,\n      value: salesChannel,\n    }\n  }\n\n  const getRegionFacet = (): IStoreSelectedFacet | null => {\n    const { regionId } = ctx.storage.channel\n\n    if (!regionId) {\n      return null\n    }\n\n    return {\n      key: REGION_KEY,\n      value: regionId,\n    }\n  }\n\n  const addDefaultFacets = (facets: SelectedFacet[]) => {\n    const withDefaltFacets = facets.filter(({ key }) => !CHANNEL_KEYS.has(key))\n\n    const policyFacet =\n      facets.find(({ key }) => key === POLICY_KEY) ?? getPolicyFacet()\n\n    const regionFacet =\n      facets.find(({ key }) => key === REGION_KEY) ?? getRegionFacet()\n\n    if (policyFacet !== null) {\n      withDefaltFacets.push(policyFacet)\n    }\n\n    if (regionFacet !== null) {\n      withDefaltFacets.push(regionFacet)\n    }\n\n    return withDefaltFacets\n  }\n\n  const search = <T>({\n    query = '',\n    page,\n    count,\n    sort = '',\n    selectedFacets = [],\n    type,\n    fuzzy = 'auto',\n  }: SearchArgs): Promise<T> => {\n    const params = new URLSearchParams({\n      page: (page + 1).toString(),\n      count: count.toString(),\n      query,\n      sort,\n      fuzzy,\n      locale: ctx.storage.locale,\n    })\n\n    if (hideUnavailableItems !== undefined) {\n      params.append('hideUnavailableItems', hideUnavailableItems.toString())\n    }\n\n    const pathname = addDefaultFacets(selectedFacets)\n      .map(({ key, value }) => `${key}/${value}`)\n      .join('/')\n\n    return fetchAPI(\n      `${base}/_v/api/intelligent-search/${type}/${pathname}?${params.toString()}`\n    )\n  }\n\n  const products = (args: Omit<SearchArgs, 'type'>) =>\n    search<ProductSearchResult>({ ...args, type: 'product_search' })\n\n  const suggestedTerms = (\n    args: Omit<SearchArgs, 'type'>\n  ): Promise<Suggestion> => {\n    const params = new URLSearchParams({\n      query: args.query?.toString() ?? '',\n      locale: ctx.storage.locale,\n    })\n\n    return fetchAPI(\n      `${base}/_v/api/intelligent-search/search_suggestions?${params.toString()}`\n    )\n  }\n\n  const topSearches = (): Promise<Suggestion> => {\n    const params = new URLSearchParams({\n      locale: ctx.storage.locale,\n    })\n\n    return fetchAPI(\n      `${base}/_v/api/intelligent-search/top_searches?${params.toString()}`\n    )\n  }\n\n  const facets = (args: Omit<SearchArgs, 'type'>) =>\n    search<FacetSearchResult>({ ...args, type: 'facets' })\n\n  return {\n    facets,\n    products,\n    suggestedTerms,\n    topSearches,\n  }\n}\n","/**\n * Client for SP, Intelligent search's analytics event API\n * More info at: https://www.notion.so/vtexhandbook/Event-API-Documentation-48eee26730cf4d7f80f8fd7262231f84\n */\nimport { fetchAPI } from '../fetch'\nimport type { Options, Context } from '../../index'\n\nconst THIRTY_MINUTES_S = 30 * 60\nconst ONE_YEAR_S = 365 * 24 * 3600\n\nconst randomUUID = () => (Math.random() * 1e6).toFixed(0)\n\nconst timelapsed = (past: number) => (Date.now() - past) / 1e3\n\nconst createId = (expiresSecond: number) => {\n  let payload = randomUUID()\n  let createdAt = Date.now()\n\n  return () => {\n    if (timelapsed(createdAt) > expiresSecond) {\n      payload = randomUUID()\n      createdAt = Date.now()\n    }\n\n    return payload\n  }\n}\n\nconst user = {\n  anonymous: createId(ONE_YEAR_S),\n  session: createId(THIRTY_MINUTES_S),\n}\n\nexport type SearchEvent = {\n  type: 'search.query'\n  text: string // 'zapatilha'\n  misspelled: boolean\n  match: number\n  operator: 'and' | 'or'\n  session?: string\n  anonymous?: string\n}\n\nexport const SP = ({ account }: Options, _: Context) => {\n  const base = `https://sp.vtex.com/event-api/v1/${account}/event`\n\n  const sendEvent = (options: SearchEvent) => {\n    return fetchAPI(base, {\n      method: 'POST',\n      body: JSON.stringify({\n        ...options,\n        agent: '@faststore/api',\n        anonymous: user.anonymous(),\n        session: user.session(),\n        // session: 'zZlNhqz1vFJP6iPG5Oqtt',\n        // anonymous: 'Om1TNluGvgmSgU5OOTvkkd',\n      }),\n      headers: {\n        'content-type': 'application/json',\n      },\n    })\n  }\n\n  return {\n    sendEvent,\n  }\n}\n","import { VtexCommerce } from './commerce'\nimport { IntelligentSearch } from './search'\nimport { SP } from './sp'\nimport type { Context, Options } from '..'\n\nexport type Clients = ReturnType<typeof getClients>\n\nexport const getClients = (options: Options, ctx: Context) => {\n  const search = IntelligentSearch(options, ctx)\n  const commerce = VtexCommerce(options, ctx)\n  const sp = SP(options, ctx)\n\n  return {\n    search,\n    commerce,\n    sp,\n  }\n}\n","import DataLoader from \"dataloader\";\n\nimport { Options } from \"..\";\nimport { Clients } from \"../clients\";\n\nimport type { SalesChannel } from \"./../clients/commerce/types/SalesChannel\";\n\nexport const getSalesChannelLoader = (_: Options, clients: Clients) => {\n  const loader = async (channels: readonly string[]) =>\n    Promise.all(\n      channels.map((sc) => clients.commerce.catalog.salesChannel(sc)),\n    );\n\n  return new DataLoader<string, SalesChannel>(loader);\n};\n","import DataLoader from 'dataloader'\nimport pLimit from 'p-limit'\n\nimport type {\n  PayloadItem,\n  Simulation,\n} from '../clients/commerce/types/Simulation'\nimport type { Options } from '..'\nimport type { Clients } from '../clients'\n\n// Limits concurrent requests to the API per request cycle\nconst CONCURRENT_REQUESTS_MAX = 1\n\nexport const getSimulationLoader = (_: Options, clients: Clients) => {\n  const limit = pLimit(CONCURRENT_REQUESTS_MAX)\n\n  const loader = async (allItems: readonly PayloadItem[][]) => {\n    const items = [...allItems.flat()]\n    const simulation = await clients.commerce.checkout.simulation({\n      items,\n    })\n\n    // Sort and filter simulation since Checkout API may return\n    // items that we didn't ask for\n    const simulated = simulation.items.reduce((acc, item) => {\n      const index = item.requestIndex\n\n      if (typeof index === 'number' && index < acc.length) {\n        acc[index] = item\n      }\n\n      return acc\n    }, Array(items.length).fill(null) as Simulation['items'])\n\n    const itemsIndices = allItems.reduce(\n      (acc, curr) => [...acc, curr.length + acc[acc.length - 1]],\n      [0]\n    )\n\n    return allItems.map((__, index) => ({\n      ...simulation,\n      items: simulated\n        .slice(itemsIndices[index], itemsIndices[index + 1])\n        .filter((item) => Boolean(item)),\n    }))\n  }\n\n  const limited = async (allItems: readonly PayloadItem[][]) =>\n    limit(loader, allItems)\n\n  return new DataLoader<PayloadItem[], Simulation>(limited, {\n    maxBatchSize: 50,\n  })\n}\n","import type { Product, Item } from '../clients/search/types/ProductSearchResult'\n\nexport type EnhancedSku = Item & { isVariantOf: Product }\n\nexport const enhanceSku = (item: Item, product: Product): EnhancedSku => ({\n  ...item,\n  isVariantOf: product,\n})\n","type ErrorType = 'BadRequestError' | 'NotFoundError' | 'RedirectError'\n\ninterface Extension {\n  type: ErrorType\n  status: number\n}\n\nclass FastStoreError<T extends Extension = Extension> extends Error {\n  constructor(public extensions: T, message?: string) {\n    super(message)\n    this.name = 'FastStoreError'\n  }\n}\n\nexport class BadRequestError extends FastStoreError {\n  constructor(message?: string) {\n    super({ status: 400, type: 'BadRequestError' }, message)\n  }\n}\n\nexport class NotFoundError extends FastStoreError {\n  constructor(message?: string) {\n    super({ status: 404, type: 'NotFoundError' }, message)\n  }\n}\n\nexport const isFastStoreError = (error: any): error is FastStoreError =>\n  error?.name === 'FastStoreError'\n\nexport const isNotFoundError = (error: any): error is NotFoundError =>\n  error?.extensions?.type === 'NotFoundError'\n\nexport const isBadRequestError = (error: any): error is BadRequestError =>\n  error?.extensions?.type === 'BadRequestError'\n","import DataLoader from 'dataloader'\n\nimport { enhanceSku } from '../utils/enhanceSku'\nimport { NotFoundError } from '../../errors'\nimport type { EnhancedSku } from '../utils/enhanceSku'\nimport type { Options } from '..'\nimport type { Clients } from '../clients'\n\nexport const getSkuLoader = (_: Options, clients: Clients) => {\n  const loader = async (skuIds: readonly string[]) => {\n    const { products } = await clients.search.products({\n      query: `sku:${skuIds.join(';')}`,\n      page: 0,\n      count: skuIds.length,\n    })\n\n    const skuBySkuId = products.reduce((acc, product) => {\n      for (const sku of product.items) {\n        acc[sku.itemId] = enhanceSku(sku, product)\n      }\n\n      return acc\n    }, {} as Record<string, EnhancedSku>)\n\n    const skus = skuIds.map((skuId) => skuBySkuId[skuId])\n    const missingSkus = skuIds.filter((skuId) => !skuBySkuId[skuId])\n\n    if (missingSkus.length > 0) {\n      throw new NotFoundError(\n        `Search API did not found the following skus: ${missingSkus.join(',')}`\n      )\n    }\n\n    return skus\n  }\n\n  return new DataLoader<string, EnhancedSku>(loader, {\n    maxBatchSize: 99, // Max allowed batch size of Search API\n  })\n}\n","import DataLoader from 'dataloader'\nimport pLimit from 'p-limit'\n\nimport { NotFoundError } from '../../errors'\nimport type { CollectionPageType } from '../clients/commerce/types/Portal'\nimport type { Options } from '..'\nimport type { Clients } from '../clients'\n\n// Limits concurrent requests to 20 so that they don't timeout\nconst CONCURRENT_REQUESTS_MAX = 20\n\nconst collectionPageTypes = new Set([\n  'brand',\n  'category',\n  'department',\n  'subcategory',\n] as const)\n\nexport const isCollectionPageType = (x: any): x is CollectionPageType =>\n  typeof x.pageType === 'string' &&\n  collectionPageTypes.has(x.pageType.toLowerCase())\n\nexport const getCollectionLoader = (_: Options, clients: Clients) => {\n  const limit = pLimit(CONCURRENT_REQUESTS_MAX)\n\n  const loader = async (\n    slugs: readonly string[]\n  ): Promise<CollectionPageType[]> => {\n    return Promise.all(\n      slugs.map((slug: string) =>\n        limit(async () => {\n          const page = await clients.commerce.catalog.portal.pagetype(slug)\n\n          if (isCollectionPageType(page)) {\n            return page\n          }\n\n          throw new NotFoundError(\n            `Catalog returned ${page.pageType} for slug: ${slug}. This usually happens when there is more than one category with the same name in the same category tree level.`\n          )\n        })\n      )\n    )\n  }\n\n  return new DataLoader<string, CollectionPageType>(loader, {\n    // DataLoader is being used to cache requests, not to batch them\n    batch: false,\n  })\n}\n","import { getSalesChannelLoader } from './salesChannel';\nimport { getSimulationLoader } from './simulation'\nimport { getSkuLoader } from './sku'\nimport { getCollectionLoader } from './collection'\nimport type { Context, Options } from '..'\n\nexport type Loaders = ReturnType<typeof getLoaders>\n\nexport const getLoaders = (options: Options, { clients }: Context) => {\n  const skuLoader = getSkuLoader(options, clients)\n  const simulationLoader = getSimulationLoader(options, clients)\n  const collectionLoader = getCollectionLoader(options, clients)\n  const salesChannelLoader = getSalesChannelLoader(options, clients)\n\n  return {\n    skuLoader,\n    simulationLoader,\n    collectionLoader,\n    salesChannelLoader\n  }\n}\n","import type { CommertialOffer } from '../clients/search/types/ProductSearchResult'\n\nexport const inStock = (offer: Pick<CommertialOffer, 'AvailableQuantity'>) =>\n  offer.AvailableQuantity > 0\n\nexport const price = (offer: Pick<CommertialOffer, 'spotPrice'>) =>\n  offer.spotPrice ?? 0\nexport const sellingPrice = (offer: CommertialOffer) => offer.Price ?? 0\n\nexport const availability = (available: boolean) =>\n  available ? 'https://schema.org/InStock' : 'https://schema.org/OutOfStock'\n\n// Smallest Available Spot Price First\nexport const bestOfferFirst = (\n  a: Pick<CommertialOffer, 'AvailableQuantity' | 'spotPrice'>,\n  b: Pick<CommertialOffer, 'AvailableQuantity' | 'spotPrice'>\n) => {\n  if (inStock(a) && !inStock(b)) {\n    return -1\n  }\n\n  if (!inStock(a) && inStock(b)) {\n    return 1\n  }\n\n  return price(a) - price(b)\n}\n\nexport const inStockOrderFormItem = (itemAvailability: string) =>\n  itemAvailability === 'available'\n","import { inStock, price } from '../utils/productStock'\nimport type { StoreProduct } from './product'\nimport type { PromiseType } from '../../../typings'\nimport type { Resolver } from '..'\n\ntype Root = PromiseType<ReturnType<typeof StoreProduct.offers>>\n\nexport const StoreAggregateOffer: Record<string, Resolver<Root>> & {\n  offers: Resolver<Root, any, Root>\n} = {\n  highPrice: (offers) => {\n    const availableOffers = offers.filter(inStock)\n    const highOffer = availableOffers[availableOffers.length - 1]\n\n    return highOffer != null ? price(highOffer) : 0\n  },\n  lowPrice: (offers) => {\n    const [lowOffer] = offers.filter(inStock)\n\n    return lowOffer ? price(lowOffer) : 0\n  },\n  offerCount: (offers) => offers.length,\n  priceCurrency: async (_, __, ctx) => {\n    const { \n      loaders: { salesChannelLoader }, \n      storage: { channel } \n    } = ctx\n\n    const sc = await salesChannelLoader.load(channel.salesChannel);\n    \n    return sc.CurrencyCode ?? '';\n  },\n  offers: (offers) => offers,\n}\n","import type { Resolver } from '..'\n\n// TODO: Add a review system integration\nexport const StoreAggregateRating: Record<string, Resolver> = {\n  ratingValue: () => 5,\n  reviewCount: () => 0,\n}\n","/* eslint-disable no-useless-escape */\n/**\n * VTEX catalog slugify function\n *\n * Copied from:\n * https://github.com/vtex/rewriter/blob/1ce2010783e0586cab42534ce2fb7a983d8a3a84/node/clients/catalog.ts#L72\n *\n * Sometimes, we need to slugify strings for creating urls. An example is the\n * brand urls, where we create them from the brand's name.\n * This slugify function should match exactly what VTEX catalog generates. Any mismatch\n * will lead to broken links.\n * Hopefully, we had this function implemented on VTEX IO and we've been using it for\n * years now. However, looking at the code, I think we can save lots of computing. I'm\n * in a hurry for doing these tests now, so I'll leave a small TODO.\n *\n * TODO: Research for better ways of computing this slugify function. Things I'd try are:\n * - Join those 3 regexs for special characters into a single one.\n * - Replace the regexp of `removeDiacritics` function with a Map. We can make the complexity\n * of this function be O(n) with n=string.length\n *\n */\nconst from =\n  'ÁÄÂÀÃÅČÇĆĎÉĚËÈÊẼĔȆÍÌÎÏŇÑÓÖÒÔÕØŘŔŠŤÚŮÜÙÛÝŸŽáäâàãåčçćďéěëèêẽĕȇíìîïňñóöòôõøðřŕšťúůüùûýÿžþÞĐđßÆa'\n\nconst to =\n  'AAAAAACCCDEEEEEEEEIIIINNOOOOOORRSTUUUUUYYZaaaaaacccdeeeeeeeeiiiinnooooooorrstuuuuuyyzbBDdBAa'\n\nconst removeDiacritics = (str: string) => {\n  let newStr = str.slice(0)\n\n  for (let i = 0; i < from.length; i++) {\n    newStr = newStr.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i))\n  }\n\n  return newStr\n}\n\nconst slugifySpecialCharacters = (str: string) => {\n  return str.replace(/[·/_,:]/, '-')\n}\n\nexport function slugify(str: string) {\n  const noCommas = str.replace(/,/g, '')\n  const replaced = noCommas.replace(/[*+~.()'\"!:@&\\[\\]`/ %$#?{}|><=_^]/g, '-')\n  const slugified = slugifySpecialCharacters(removeDiacritics(replaced))\n\n  return slugified.toLowerCase()\n}\n","import { isCollectionPageType } from '../loaders/collection'\nimport { slugify } from '../utils/slugify'\nimport type { Resolver } from '..'\nimport type { Brand } from '../clients/commerce/types/Brand'\nimport type { CategoryTree } from '../clients/commerce/types/CategoryTree'\nimport type { CollectionPageType } from '../clients/commerce/types/Portal'\n\ntype Root = Brand | (CategoryTree & { level: number }) | CollectionPageType\n\nconst isBrand = (x: any): x is Brand | CollectionPageType =>\n  x.type === 'brand' ||\n  (isCollectionPageType(x) && x.pageType.toLowerCase() === 'brand')\n\nconst slugifyRoot = (root: Root) => {\n  if (isBrand(root)) {\n    return slugify(root.name)\n  }\n\n  if (isCollectionPageType(root)) {\n    return new URL(`https://${root.url}`).pathname.slice(1).toLowerCase()\n  }\n\n  return new URL(root.url).pathname.slice(1).toLowerCase()\n}\n\nexport const StoreCollection: Record<string, Resolver<Root>> = {\n  id: ({ id }) => id.toString(),\n  slug: (root) => slugifyRoot(root),\n  seo: (root) =>\n    isBrand(root) || isCollectionPageType(root)\n      ? {\n          title: root.title,\n          description: root.metaTagDescription,\n        }\n      : {\n          title: root.Title,\n          description: root.MetaTagDescription,\n        },\n  type: (root) =>\n    isBrand(root)\n      ? 'Brand'\n      : isCollectionPageType(root)\n      ? root.pageType\n      : root.level === 0\n      ? 'Department'\n      : 'Category',\n  meta: (root) => {\n    const slug = slugifyRoot(root)\n\n    return isBrand(root)\n      ? {\n          selectedFacets: [{ key: 'brand', value: slug }],\n        }\n      : {\n          selectedFacets: slug.split('/').map((segment, index) => ({\n            key: `category-${index + 1}`,\n            value: segment,\n          })),\n        }\n  },\n  breadcrumbList: async (root, _, ctx) => {\n    const {\n      loaders: { collectionLoader },\n    } = ctx\n\n    const slug = slugifyRoot(root)\n\n    /**\n     * Split slug into segments so we fetch all data for\n     * the breadcrumb. For instance, if we get `/foo/bar`\n     * we need all metadata for both `/foo` and `/bar` and\n     * thus we need to fetch pageType for `/foo` and `/bar`\n     */\n    const segments = slug.split('/').filter((segment) => Boolean(segment))\n    const slugs = segments.map((__, index) =>\n      segments.slice(0, index + 1).join('/')\n    )\n\n    const collections = await Promise.all(\n      slugs.map((s) => collectionLoader.load(s))\n    )\n\n    return {\n      itemListElement: collections.map((collection, index) => ({\n        item: new URL(`https://${collection.url}`).pathname.toLowerCase(),\n        name: collection.name,\n        position: index + 1,\n      })),\n      numberOfItems: collections.length,\n    }\n  },\n}\n","export interface Channel {\n  regionId?: string\n  salesChannel?: string\n}\n\nexport default class ChannelMarshal {\n  public static parse(channelString: string): Required<Channel> {\n    try {\n      const parsedChannel = JSON.parse(channelString) as Channel\n\n      return {\n        regionId: parsedChannel.regionId ?? '',\n        salesChannel: parsedChannel.salesChannel ?? '',\n      }\n    } catch (error) {\n      console.error(error)\n\n      throw new Error('Malformed channel string')\n    }\n  }\n\n  public static stringify(channel: Channel): string {\n    return JSON.stringify(channel)\n  }\n}\n","import ChannelMarshal from './channel'\nimport type { Maybe } from '../../../__generated__/schema'\nimport { BadRequestError } from '../../errors'\n\nexport interface SelectedFacet {\n  key: string\n  value: string\n}\n\nexport interface CrossSellingFacet {\n  key: keyof typeof FACET_CROSS_SELLING_MAP\n  value: string\n}\n\nexport const FACET_CROSS_SELLING_MAP = {\n  buy: \"whoboughtalsobought\",\n  view: \"whosawalsosaw\",\n  similars: \"similars\",\n  viewAndBought: \"whosawalsobought\",\n  accessories: \"accessories\",\n  suggestions: \"suggestions\",\n} as const\n\n/**\n * Transform facets from the store to VTEX platform facets.\n * For instance, the channel in Store becomes trade-policy and regionId in VTEX's realm\n * */\nexport const transformSelectedFacet = ({ key, value }: SelectedFacet) => {\n  switch (key) {\n    case 'channel': {\n      const channel = ChannelMarshal.parse(value)\n      const channelFacets = [\n        { key: 'trade-policy', value: channel.salesChannel },\n      ]\n\n      if (channel.regionId) {\n        channelFacets.push({ key: 'region-id', value: channel.regionId })\n      }\n\n      return channelFacets\n    }\n\n    case 'locale': {\n      return [] // remove this facet from search\n    }\n\n    case 'price': {\n      return { key, value: value.replace('-to-', ':') }\n    }\n\n    case \"buy\":\n    case \"view\":\n    case \"similars\":\n    case \"viewAndBought\":\n    case \"accessories\":\n    case \"suggestions\": {\n      return [] // remove this facet from search\n    }\n\n    default:\n      return { key, value }\n  }\n}\n\nexport const parseRange = (range: string): [number, number] | null => {\n  const splitted = range.split(':').map(Number)\n\n  if (\n    splitted.length !== 2 ||\n    Number.isNaN(splitted[0]) ||\n    Number.isNaN(splitted[1])\n  ) {\n    return null\n  }\n\n  return splitted as [number, number]\n}\n\nexport const isCrossSelling = (\n  x: string,\n): x is CrossSellingFacet['key'] =>\n  typeof (FACET_CROSS_SELLING_MAP as Record<string, string>)[x] === \"string\"\n\nexport const findCrossSelling = (facets?: Maybe<SelectedFacet[]>) => {\n  const filtered = facets?.filter((x): x is CrossSellingFacet => isCrossSelling(x.key))\n\n  if (Array.isArray(filtered) && filtered.length > 1) {\n    throw new BadRequestError(\n      `You passed ${filtered.length} cross selling facets but only one is allowed. Please leave one of the following facet: ${filtered.map(x => x.key).join(',')}`\n    )\n  }\n\n  return filtered?.[0] ?? null\n}\n\nexport const findSlug = (facets?: Maybe<SelectedFacet[]>) =>\n  facets?.find((x) => x.key === 'slug')?.value ?? null\n\nexport const findSkuId = (facets?: Maybe<SelectedFacet[]>) =>\n  facets?.find((x) => x.key === 'id')?.value ?? null\n\nexport const findLocale = (facets?: Maybe<SelectedFacet[]>) =>\n  facets?.find((x) => x.key === 'locale')?.value ?? null\n\nexport const findChannel = (facets?: Maybe<SelectedFacet[]>) =>\n  facets?.find((facet) => facet.key === 'channel')?.value ?? null\n","/**\n * More info at: https://en.wikipedia.org/wiki/Order_statistic\n */\n\n// O(n) search to find the max of an array\nexport const min = <T>(array: T[], cmp: (a: T, b: T) => number) => {\n  let best = 0\n\n  for (let curr = 1; curr < array.length; curr++) {\n    if (cmp(array[best], array[curr]) > 0) {\n      best = curr\n    }\n  }\n\n  return array[best]\n}\n","import { parseRange } from '../utils/facets'\nimport { min } from '../utils/orderStatistics'\nimport type {\n  FacetValueBoolean,\n  Facet,\n  FacetValueRange,\n} from '../clients/search/types/FacetSearchResult'\nimport type { Resolver } from '..'\n\ntype Root = Facet\n\nexport const StoreFacet: Record<string, Resolver<Root>> = {\n  __resolveType: ({ type }) =>\n    type === 'TEXT' ? 'StoreFacetBoolean' : 'StoreFacetRange',\n}\n\nexport const StoreFacetBoolean: Record<\n  string,\n  Resolver<Facet<FacetValueBoolean>>\n> = {\n  key: ({ key }) => key,\n  label: ({ name }) => name,\n  values: ({ values }) => values.sort((a, b) => a.name.localeCompare(b.name)),\n}\n\nexport const StoreFacetRange: Record<\n  string,\n  Resolver<Facet<FacetValueRange>>\n> = {\n  key: ({ key }) => key,\n  label: ({ name }) => name,\n  min: ({ values, key }, _, { storage: { searchArgs } }) => {\n    /**\n     * Fetch the selected range the user queried.\n     *\n     * This is necessary because, differently from boolean facets, Search API does\n     * not return the selected values, making us have to implement it in here\n     */\n    const selectedRange = parseRange(\n      searchArgs?.selectedFacets?.find((facet) => facet.key === key)?.value ??\n        ''\n    )\n\n    const facet = min(values, (a, b) => a.range.from - b.range.from)\n    const globalMin = facet?.range.from ?? 0\n\n    return {\n      selected: selectedRange?.[0] ?? globalMin,\n      absolute: globalMin,\n    }\n  },\n  max: ({ values, key }, _, { storage: { searchArgs } }) => {\n    /**\n     * Fetch the selected range the user queried.\n     *\n     * This is necessary because, differently from boolean facets, Search API does\n     * not return the selected values, making us have to implement it in here\n     */\n    const selectedRange = parseRange(\n      searchArgs?.selectedFacets?.find((facet) => facet.key === key)?.value ??\n        ''\n    )\n\n    const facet = min(values, (a, b) => b.range.to - a.range.to)\n    const globalMax = facet?.range.to ?? 0\n\n    return {\n      selected: selectedRange?.[1] ?? globalMax,\n      absolute: globalMax,\n    }\n  },\n}\n","import type { Resolver } from '..'\nimport type { FacetValueBoolean } from '../clients/search/types/FacetSearchResult'\n\nexport const StoreFacetValueBoolean: Record<\n  string,\n  Resolver<FacetValueBoolean>\n> = {\n  value: ({ value }) => value,\n  label: ({ name }) => name || 'unknown',\n  selected: ({ selected }) => selected,\n  quantity: ({ quantity }) => quantity,\n}\n","import crypto from 'crypto'\n\nexport const md5 = (payload: string) =>\n  crypto.createHash('md5').update(payload).digest('hex')\n","import type { IStorePropertyValue } from '../../../__generated__/schema'\nimport type { Attachment } from '../clients/commerce/types/OrderForm'\nimport { md5 } from './md5'\n\nexport const VALUE_REFERENCES = {\n  attachment: 'ATTACHMENT',\n  specification: 'SPECIFICATION',\n} as const\n\nexport function attachmentToPropertyValue(attachment: Attachment) {\n  return {\n    name: attachment.name,\n    value: attachment.content,\n    valueReference: VALUE_REFERENCES.attachment,\n  }\n}\n\nexport function getPropertyId(item: IStorePropertyValue) {\n  return md5(\n    `${item.name}:${JSON.stringify(item.value)}:${item.valueReference}`\n  )\n}\n","import deepEquals from 'fast-deep-equal'\n\nimport { md5 } from '../utils/md5'\nimport type {\n  IStoreCart,\n  IStoreOffer,\n  IStoreOrder,\n  IStorePropertyValue,\n} from '../../../__generated__/schema'\nimport type {\n  OrderForm,\n  OrderFormInputItem,\n  OrderFormItem,\n} from '../clients/commerce/types/OrderForm'\nimport type { Context } from '..'\nimport {\n  attachmentToPropertyValue,\n  getPropertyId,\n  VALUE_REFERENCES,\n} from '../utils/propertyValue'\n\ntype Indexed<T> = T & { index?: number }\n\nconst isAttachment = (value: IStorePropertyValue) =>\n  value.valueReference === VALUE_REFERENCES.attachment\n\nconst getId = (item: IStoreOffer) =>\n  [\n    item.itemOffered.sku,\n    item.seller.identifier,\n    item.price,\n    item.itemOffered.additionalProperty\n      ?.filter(isAttachment)\n      .map(getPropertyId)\n      .join('-'),\n  ]\n    .filter(Boolean)\n    .join('::')\n\nconst orderFormItemToOffer = (\n  item: OrderFormItem,\n  index?: number\n): Indexed<IStoreOffer> => ({\n  listPrice: item.listPrice / 100,\n  price: item.sellingPrice / 100,\n  quantity: item.quantity,\n  seller: { identifier: item.seller },\n  itemOffered: {\n    sku: item.id,\n    image: [],\n    name: item.name,\n    additionalProperty: item.attachments.map(attachmentToPropertyValue),\n  },\n  index,\n})\n\nconst offerToOrderItemInput = (\n  offer: Indexed<IStoreOffer>\n): OrderFormInputItem => ({\n  quantity: offer.quantity,\n  seller: offer.seller.identifier,\n  id: offer.itemOffered.sku,\n  index: offer.index,\n  attachments: (\n    offer.itemOffered.additionalProperty?.filter(isAttachment) ?? []\n  ).map((attachment) => ({\n    name: attachment.name,\n    content: attachment.value,\n  })),\n})\n\nconst groupById = (offers: IStoreOffer[]): Map<string, IStoreOffer> =>\n  offers.reduce((acc, item) => {\n    const id = getId(item)\n\n    acc.set(id, acc.get(id) ?? item)\n\n    return acc\n  }, new Map<string, IStoreOffer>())\n\nconst equals = (storeOrder: IStoreOrder, orderForm: OrderForm) => {\n  const pick = (item: Indexed<IStoreOffer>, index: number) => ({\n    ...item,\n    itemOffered: {\n      sku: item.itemOffered.sku,\n    },\n    index,\n  })\n\n  const orderFormItems = orderForm.items.map(orderFormItemToOffer).map(pick)\n  const storeOrderItems = storeOrder.acceptedOffer.map(pick)\n\n  const isSameOrder = storeOrder.orderNumber === orderForm.orderFormId\n  const orderItemsAreSync = deepEquals(orderFormItems, storeOrderItems)\n\n  return isSameOrder && orderItemsAreSync\n}\n\nconst orderFormToCart = async (\n  form: OrderForm,\n  skuLoader: Context['loaders']['skuLoader']\n) => {\n  return {\n    order: {\n      orderNumber: form.orderFormId,\n      acceptedOffer: form.items.map(async (item) => ({\n        ...item,\n        product: await skuLoader.load(item.id), // TODO: add channel\n      })),\n    },\n    messages: form.messages.map(({ text, status }) => ({\n      text,\n      status: status.toUpperCase(),\n    })),\n  }\n}\n\nconst getOrderFormEtag = ({ items }: OrderForm) => md5(JSON.stringify(items))\n\nconst setOrderFormEtag = async (\n  form: OrderForm,\n  commerce: Context['clients']['commerce']\n) => {\n  try {\n    const orderForm = await commerce.checkout.setCustomData({\n      id: form.orderFormId,\n      appId: 'faststore',\n      key: 'cartEtag',\n      value: getOrderFormEtag(form),\n    })\n\n    return orderForm\n  } catch (err) {\n    console.error(\n      'Error while setting custom data to orderForm.\\n Make sure to add the following custom app to the orderForm: \\n{\"fields\":[\"cartEtag\"],\"id\":\"faststore\",\"major\":1}.\\n More info at: https://developers.vtex.com/vtex-rest-api/docs/customizable-fields-with-checkout-api'\n    )\n\n    throw err\n  }\n}\n\n/**\n * Checks if cartEtag stored on customData is up to date\n * @description If cartEtag is not up to date, this means that\n * another system changed the cart, like Checkout UI or Order Placed\n */\nconst isOrderFormStale = (form: OrderForm) => {\n  const faststoreData = form.customData?.customApps.find(\n    (app) => app.id === 'faststore'\n  )\n\n  const oldEtag = faststoreData?.fields?.cartEtag\n\n  if (oldEtag == null) {\n    return true\n  }\n\n  const newEtag = getOrderFormEtag(form)\n\n  return newEtag !== oldEtag\n}\n\n/**\n * This resolver implements the optimistic cart behavior. The main idea in here\n * is that we receive a cart from the UI (as query params) and we validate it with\n * the commerce platform. If the cart is valid, we return null, if the cart is\n * invalid according to the commerce platform, we return the new cart the UI should use\n * instead.\n *\n * The algorithm is something like:\n * 1. Fetch orderForm from VTEX\n * 2. Compute delta changes between the orderForm and the UI's cart\n * 3. Update the orderForm in VTEX platform accordingly\n * 4. If any changes were made, send to the UI the new cart. Null otherwise\n */\nexport const validateCart = async (\n  _: unknown,\n  { cart: { order } }: { cart: IStoreCart },\n  ctx: Context\n) => {\n  const { enableOrderFormSync } = ctx.storage.flags\n  const { orderNumber, acceptedOffer } = order\n  const {\n    clients: { commerce },\n    loaders: { skuLoader },\n  } = ctx\n\n  // Step1: Get OrderForm from VTEX Commerce\n  const orderForm = await commerce.checkout.orderForm({\n    id: orderNumber,\n  })\n\n  // Step1.5: Check if another system changed the orderForm with this orderNumber\n  // If so, this means the user interacted with this cart elsewhere and expects\n  // to see this new cart state instead of what's stored on the user's browser.\n  if (enableOrderFormSync === true) {\n    const isStale = isOrderFormStale(orderForm)\n\n    if (isStale === true && orderNumber) {\n      const newOrderForm = await setOrderFormEtag(orderForm, commerce)\n\n      return orderFormToCart(newOrderForm, skuLoader)\n    }\n  }\n\n  // Step2: Process items from both browser and checkout so they have the same shape\n  const browserItemsById = groupById(acceptedOffer)\n  const originItemsById = groupById(orderForm.items.map(orderFormItemToOffer))\n  const browserItems = Array.from(browserItemsById.values()) // items on the user's browser\n  const originItems = Array.from(originItemsById.values()) // items on the VTEX platform backend\n\n  // Step3: Compute delta changes\n  const { itemsToAdd, itemsToUpdate } = browserItems.reduce(\n    (acc, item) => {\n      const maybeOriginItem = originItemsById.get(getId(item))\n\n      if (!maybeOriginItem) {\n        acc.itemsToAdd.push(item)\n      } else {\n        acc.itemsToUpdate.push({\n          ...maybeOriginItem,\n          quantity: item.quantity,\n        })\n      }\n\n      return acc\n    },\n    {\n      itemsToAdd: [] as IStoreOffer[],\n      itemsToUpdate: [] as IStoreOffer[],\n    }\n  )\n\n  const itemsToDelete = originItems\n    .filter((item) => !browserItemsById.has(getId(item)))\n    .map((item) => ({ ...item, quantity: 0 }))\n\n  const changes = [...itemsToAdd, ...itemsToUpdate, ...itemsToDelete].map(\n    offerToOrderItemInput\n  )\n\n  if (changes.length === 0) {\n    return null\n  }\n\n  // Step4: Apply delta changes to order form\n  const updatedOrderForm = await commerce.checkout\n    // update orderForm items\n    .updateOrderFormItems({\n      id: orderForm.orderFormId,\n      orderItems: changes,\n    })\n    // update orderForm etag so we know last time we touched this orderForm\n    .then((form) =>\n      enableOrderFormSync ? setOrderFormEtag(form, commerce) : form\n    )\n\n  // Step5: If no changes detected before/after updating orderForm, the order is validated\n  if (equals(order, updatedOrderForm)) {\n    return null\n  }\n\n  // Step6: There were changes, convert orderForm to StoreCart\n  return orderFormToCart(updatedOrderForm, skuLoader)\n}\n","import deepEquals from 'fast-deep-equal'\n\nimport ChannelMarshal from '../utils/channel'\nimport type { Context } from '..'\nimport type {\n  MutationValidateSessionArgs,\n  StoreSession,\n} from '../../../__generated__/schema'\n\nexport const validateSession = async (\n  _: any,\n  { session: oldSession, search }: MutationValidateSessionArgs,\n  { clients }: Context\n): Promise<StoreSession | null> => {\n  const channel = ChannelMarshal.parse(oldSession.channel ?? '')\n  const postalCode = String(oldSession.postalCode ?? '').replace(/\\D/g, '')\n  const country = oldSession.country ?? ''\n\n  const params = new URLSearchParams(search)\n\n  params.set('sc', params.get('sc') ?? channel.salesChannel)\n\n  const [regionData, sessionData] = await Promise.all([\n    postalCode\n      ? clients.commerce.checkout.region({ postalCode, country })\n      : Promise.resolve(null),\n    clients.commerce.session(params.toString()).catch(() => null),\n  ])\n\n  const profile = sessionData?.namespaces.profile ?? null\n  const store = sessionData?.namespaces.store ?? null\n\n  const newSession = {\n    ...oldSession,\n    currency: {\n      code: store?.currencyCode.value ?? oldSession.currency.code,\n      symbol: store?.currencySymbol.value ?? oldSession.currency.symbol,\n    },\n    country: store?.countryCode.value ?? oldSession.country,\n    channel: ChannelMarshal.stringify({\n      salesChannel: store?.channel?.value ?? channel.salesChannel,\n      regionId: regionData?.[0]?.id ?? channel.regionId,\n    }),\n    person: profile?.id\n      ? {\n          id: profile.id?.value ?? '',\n          email: profile.email?.value ?? '',\n          givenName: profile.firstName?.value ?? '',\n          familyName: profile.lastName?.value ?? '',\n        }\n      : null,\n  }\n\n  if (deepEquals(oldSession, newSession)) {\n    return null\n  }\n\n  return newSession\n}\n","import { validateCart } from './validateCart'\nimport { validateSession } from './validateSession'\n\nexport const Mutation = {\n  validateCart,\n  validateSession,\n}\n","import type { GraphQLScalarSerializer } from 'graphql'\nimport { GraphQLScalarType } from 'graphql'\nimport { Kind } from 'graphql/language'\n\nexport const ObjectOrString = new GraphQLScalarType({\n  name: 'ObjectOrString',\n  description:\n    'A string or the string representation of an object (a stringified object).',\n  parseValue: toObjectOrString,\n  serialize: stringify,\n  parseLiteral(ast) {\n    if (ast.kind === Kind.STRING) {\n      return getValueAsObjectOrString(ast.value)\n    }\n\n    return null\n  },\n})\n\nfunction toObjectOrString(value: GraphQLScalarSerializer<any>) {\n  if (typeof value === 'string') {\n    return getValueAsObjectOrString(value)\n  }\n\n  return null\n}\n\nfunction getValueAsObjectOrString(value: string) {\n  try {\n    return JSON.parse(value)\n  } catch (e) {\n    return value\n  }\n}\n\nfunction stringify(value: GraphQLScalarSerializer<any>) {\n  if (typeof value === 'object') {\n    return JSON.stringify(value)\n  }\n\n  if (typeof value === 'string') {\n    return value\n  }\n\n  return null\n}\n","import {\n  availability,\n  inStock,\n  inStockOrderFormItem,\n  price,\n  sellingPrice,\n} from '../utils/productStock'\nimport type { Resolver } from '..'\nimport type { StoreAggregateOffer } from './aggregateOffer'\nimport type { ArrayElementType } from '../../../typings'\nimport type { EnhancedSku } from '../utils/enhanceSku'\nimport type { OrderFormItem } from '../clients/commerce/types/OrderForm'\n\ntype OrderFormProduct = OrderFormItem & { product: EnhancedSku }\ntype SearchProduct = ArrayElementType<\n  ReturnType<typeof StoreAggregateOffer.offers>\n>\ntype Root = SearchProduct | OrderFormProduct\n\nconst isSearchItem = (item: Root): item is SearchProduct =>\n  'Price' in item && 'seller' in item && 'product' in item\n\nconst isOrderFormItem = (item: Root): item is OrderFormProduct =>\n  'skuName' in item\n\nexport const StoreOffer: Record<string, Resolver<Root>> = {\n  priceCurrency: async (_, __, ctx) => {\n    const { \n      loaders: { salesChannelLoader }, \n      storage: { channel } \n    } = ctx\n\n    const sc = await salesChannelLoader.load(channel.salesChannel);\n    \n    return sc.CurrencyCode ?? '';\n  },\n  priceValidUntil: (root) => {\n    if (isSearchItem(root)) {\n      return root.PriceValidUntil ?? ''\n    }\n\n    if (isOrderFormItem(root)) {\n      return root.priceValidUntil ?? ''\n    }\n\n    return null\n  },\n  itemCondition: () => 'https://schema.org/NewCondition',\n  availability: async (root) => {\n    if (isSearchItem(root)) {\n      return availability(inStock(root))\n    }\n\n    if (isOrderFormItem(root)) {\n      return availability(inStockOrderFormItem(root.availability))\n    }\n\n    return null\n  },\n  seller: (root) => {\n    if (isSearchItem(root)) {\n      return {\n        identifier: root.seller.sellerId ?? '',\n      }\n    }\n\n    if (isOrderFormItem(root)) {\n      return {\n        identifier: root.seller,\n      }\n    }\n\n    return null\n  },\n  price: (root) => {\n    if (isSearchItem(root)) {\n      return price(root)\n    }\n\n    if (isOrderFormItem(root)) {\n      return root.sellingPrice / 1e2\n    }\n\n    return null\n  },\n  sellingPrice: (root) => {\n    if (isSearchItem(root)) {\n      return sellingPrice(root)\n    }\n\n    if (isOrderFormItem(root)) {\n      return root.sellingPrice / 1e2\n    }\n\n    return null\n  },\n  listPrice: (root) => {\n    if (isSearchItem(root)) {\n      return root.ListPrice ?? 0\n    }\n\n    if (isOrderFormItem(root)) {\n      return root.listPrice / 1e2\n    }\n\n    return null\n  },\n  itemOffered: (root) => {\n    if (isSearchItem(root)) {\n      return root.product\n    }\n\n    if (isOrderFormItem(root)) {\n      return {\n        ...root.product,\n        attachmentsValues: root.attachments,\n      }\n    }\n\n    return null\n  },\n  quantity: (root) => {\n    if (isSearchItem(root)) {\n      return root.AvailableQuantity ?? 0\n    }\n\n    if (isOrderFormItem(root)) {\n      return root.quantity\n    }\n\n    return null\n  },\n}\n","import type { Product } from '../clients/search/types/ProductSearchResult'\n\nexport const canonicalFromProduct = ({ linkText }: Product) => `/${linkText}/p`\n","import type { CommertialOffer } from '../clients/search/types/ProductSearchResult'\n\nexport type EnhancedCommercialOffer<S, P> = CommertialOffer & {\n  seller: S\n  product: P\n}\n\nexport const enhanceCommercialOffer = <S, P>({\n  offer,\n  seller,\n  product,\n}: {\n  offer: CommertialOffer\n  seller: S\n  product: P\n}): EnhancedCommercialOffer<S, P> => ({\n  ...offer,\n  product,\n  seller,\n})\n","import { canonicalFromProduct } from '../utils/canonical'\nimport { enhanceCommercialOffer } from '../utils/enhanceCommercialOffer'\nimport { bestOfferFirst } from '../utils/productStock'\nimport { slugify } from '../utils/slugify'\nimport type { EnhancedCommercialOffer } from '../utils/enhanceCommercialOffer'\nimport type { Resolver } from '..'\nimport type { PromiseType } from '../../../typings'\nimport type { Query } from './query'\nimport {\n  attachmentToPropertyValue,\n  VALUE_REFERENCES,\n} from '../utils/propertyValue'\nimport type { Attachment } from '../clients/commerce/types/OrderForm'\n\ntype QueryProduct = PromiseType<ReturnType<typeof Query.product>>\n\ntype Root = QueryProduct & {\n  attachmentsValues?: Attachment[]\n}\n\nconst DEFAULT_IMAGE = {\n  imageText: 'image',\n  imageUrl:\n    'https://storecomponents.vtexassets.com/assets/faststore/images/image___117a6d3e229a96ad0e0d0876352566e2.svg',\n}\n\nconst getSlug = (link: string, id: string) => `${link}-${id}`\nconst getPath = (link: string, id: string) => `/${getSlug(link, id)}/p`\nconst nonEmptyArray = <T>(array: T[] | null | undefined) =>\n  Array.isArray(array) && array.length > 0 ? array : null\n\nexport const StoreProduct: Record<string, Resolver<Root>> & {\n  offers: Resolver<\n    Root,\n    any,\n    Array<EnhancedCommercialOffer<Root['sellers'][number], Root>>\n  >\n\n  isVariantOf: Resolver<Root, any, Root>\n} = {\n  productID: ({ itemId }) => itemId,\n  name: ({ isVariantOf, name }) => name ?? isVariantOf.productName,\n  slug: ({ isVariantOf: { linkText }, itemId }) => getSlug(linkText, itemId),\n  description: ({ isVariantOf: { description } }) => description,\n  seo: ({ isVariantOf }) => ({\n    title: isVariantOf.productName,\n    description: isVariantOf.description,\n    canonical: canonicalFromProduct(isVariantOf),\n  }),\n  brand: ({ isVariantOf: { brand } }) => ({ name: brand }),\n  breadcrumbList: ({\n    isVariantOf: { categories, productName, linkText },\n    itemId,\n  }) => {\n    return {\n      itemListElement: [\n        ...categories.reverse().map((categoryPath, index) => {\n          const splitted = categoryPath.split('/')\n          const name = splitted[splitted.length - 2]\n          const item = splitted.map(slugify).join('/')\n\n          return {\n            name,\n            item,\n            position: index + 1,\n          }\n        }),\n        {\n          name: productName,\n          item: getPath(linkText, itemId),\n          position: categories.length + 1,\n        },\n      ],\n      numberOfItems: categories.length,\n    }\n  },\n  image: ({ images }) =>\n    (nonEmptyArray(images) ?? [DEFAULT_IMAGE]).map(\n      ({ imageUrl, imageText }) => ({\n        alternateName: imageText ?? '',\n        url: imageUrl.replace('vteximg.com.br', 'vtexassets.com'),\n      })\n    ),\n  sku: ({ itemId }) => itemId,\n  gtin: ({ referenceId }) => referenceId[0]?.Value ?? '',\n  review: () => [],\n  aggregateRating: () => ({}),\n  offers: (root) =>\n    root.sellers\n      .map((seller) =>\n        enhanceCommercialOffer({\n          offer: seller.commertialOffer,\n          seller,\n          product: root,\n        })\n      )\n      .sort(bestOfferFirst),\n  isVariantOf: (root) => root,\n  additionalProperty: ({\n    // Search uses the name variations for specifications\n    variations: specifications = [],\n    attachmentsValues = [],\n  }) => {\n    const propertyValueSpecifications = specifications.flatMap(\n      ({ name, values }) =>\n        values.map((value) => ({\n          name,\n          value,\n          valueReference: VALUE_REFERENCES.specification,\n        }))\n    )\n\n    const propertyValueAttachments = attachmentsValues.map(\n      attachmentToPropertyValue\n    )\n\n    return [...propertyValueSpecifications, ...propertyValueAttachments]\n  },\n}\n","import { enhanceSku } from '../utils/enhanceSku'\nimport type { Resolver } from '..'\nimport type { PromiseType } from '../../../typings'\nimport type { StoreProduct } from './product'\nimport { VALUE_REFERENCES } from '../utils/propertyValue'\n\ntype Root = PromiseType<ReturnType<typeof StoreProduct.isVariantOf>>\n\nconst BLOCKED_SPECIFICATIONS = new Set(['allSpecifications'])\n\nexport const StoreProductGroup: Record<string, Resolver<Root>> = {\n  hasVariant: (root) =>\n    root.isVariantOf.items.map((item) => enhanceSku(item, root.isVariantOf)),\n  productGroupID: ({ isVariantOf }) => isVariantOf.productId,\n  name: ({ isVariantOf }) => isVariantOf.productName,\n  additionalProperty: ({ isVariantOf: { specificationGroups } }) =>\n    specificationGroups\n      // filter sku specifications so we dont mess sku with product specs\n      .filter(\n        (specificationGroup) =>\n          !BLOCKED_SPECIFICATIONS.has(specificationGroup.name)\n      )\n      // Transform specs back into product specs\n      .flatMap(({ specifications }) =>\n        specifications.flatMap(({ name, values }) =>\n          values.map((value) => ({\n            name,\n            value,\n            valueReference: VALUE_REFERENCES.specification,\n          }))\n        )\n      ),\n}\n","import type { Resolver } from '..'\nimport type { IStorePropertyValue } from '../../../__generated__/schema'\nimport { getPropertyId } from '../utils/propertyValue'\n\ntype Root = IStorePropertyValue\n\nexport const StorePropertyValue: Record<string, Resolver<Root>> = {\n  propertyID: (root) => getPropertyId(root),\n  name: ({ name }) => name,\n  value: ({ value }) => value,\n  valueReference: ({ valueReference }) => valueReference,\n}\n","import ChannelMarshal from './channel'\nimport type { Context } from '..'\n\nexport const mutateChannelContext = (ctx: Context, channelString: string) => {\n  ctx.storage.channel = ChannelMarshal.parse(channelString)\n}\n\nexport const mutateLocaleContext = (ctx: Context, locale: string) => {\n  ctx.storage.locale = locale\n}\n","export const SORT_MAP = {\n  price_desc: 'price:desc',\n  price_asc: 'price:asc',\n  orders_desc: 'orders:desc',\n  name_desc: 'name:desc',\n  name_asc: 'name:asc',\n  release_desc: 'release:desc',\n  discount_desc: 'discount:desc',\n  score_desc: '',\n} as const\n","import { min } from './orderStatistics'\nimport { bestOfferFirst } from './productStock'\nimport type { Item } from '../clients/search/types/ProductSearchResult'\n\n/**\n * This function implements Portal heuristics for returning the best sku for a product.\n *\n * The best sku is the one with the best (cheapest available) offer\n * */\nexport const pickBestSku = (skus: Item[]) => {\n  const offersBySku = skus.flatMap((sku) =>\n    sku.sellers.map((seller) => ({\n      offer: seller.commertialOffer,\n      sku,\n    }))\n  )\n\n  const best = min(offersBySku, ({ offer: o1 }, { offer: o2 }) =>\n    bestOfferFirst(o1, o2)\n  )\n\n  return best.sku\n}\n\nexport const isValidSkuId = (skuId: string) =>\n  skuId !== '' && !Number.isNaN(Number(skuId))\n","import { FACET_CROSS_SELLING_MAP } from \"./../utils/facets\"\nimport { BadRequestError, NotFoundError } from \"../../errors\"\nimport { mutateChannelContext, mutateLocaleContext } from \"../utils/contex\"\nimport { enhanceSku } from \"../utils/enhanceSku\"\nimport {\n  findChannel,\n  findCrossSelling,\n  findLocale,\n  findSkuId,\n  findSlug,\n  transformSelectedFacet,\n} from \"../utils/facets\"\nimport { SORT_MAP } from \"../utils/sort\"\nimport { StoreCollection } from \"./collection\"\nimport type {\n  QueryAllCollectionsArgs,\n  QueryAllProductsArgs,\n  QueryCollectionArgs,\n  QueryProductArgs,\n  QuerySearchArgs,\n} from \"../../../__generated__/schema\"\nimport type { CategoryTree } from \"../clients/commerce/types/CategoryTree\"\nimport type { Context } from \"../index\"\nimport { isValidSkuId, pickBestSku } from \"../utils/sku\"\n\nexport const Query = {\n  product: async (_: unknown, { locator }: QueryProductArgs, ctx: Context) => {\n    // Insert channel in context for later usage\n    const channel = findChannel(locator)\n    const locale = findLocale(locator)\n    const id = findSkuId(locator)\n    const slug = findSlug(locator)\n\n    if (channel) {\n      mutateChannelContext(ctx, channel)\n    }\n\n    if (locale) {\n      mutateLocaleContext(ctx, locale)\n    }\n\n    const {\n      loaders: { skuLoader },\n      clients: { commerce, search },\n    } = ctx\n\n    try {\n      const skuId = id ?? slug?.split('-').pop() ?? ''\n\n      if (!isValidSkuId(skuId)) {\n        throw new Error('Invalid SkuId')\n      }\n\n      const sku = await skuLoader.load(skuId)\n\n      return sku\n    } catch (err) {\n      if (slug == null) {\n        throw new BadRequestError('Missing slug or id')\n      }\n\n      const route = await commerce.catalog.portal.pagetype(`${slug}/p`)\n\n      if (route.pageType !== 'Product' || !route.id) {\n        throw new NotFoundError(`No product found for slug ${slug}`)\n      }\n\n      const {\n        products: [product],\n      } = await search.products({\n        page: 0,\n        count: 1,\n        query: `product:${route.id}`,\n      })\n\n      if (!product) {\n        throw new NotFoundError(`No product found for id ${route.id}`)\n      }\n\n      const sku = pickBestSku(product.items)\n\n      return enhanceSku(sku, product)\n    }\n  },\n  collection: (_: unknown, { slug }: QueryCollectionArgs, ctx: Context) => {\n    const {\n      loaders: { collectionLoader },\n    } = ctx\n\n    return collectionLoader.load(slug)\n  },\n  search: async (\n    _: unknown,\n    { first, after: maybeAfter, sort, term, selectedFacets }: QuerySearchArgs,\n    ctx: Context\n  ) => {\n    // Insert channel in context for later usage\n    const channel = findChannel(selectedFacets)\n    const locale = findLocale(selectedFacets)\n    const crossSelling = findCrossSelling(selectedFacets)\n\n    if (channel) {\n      mutateChannelContext(ctx, channel)\n    }\n\n    if (locale) {\n      mutateLocaleContext(ctx, locale)\n    }\n\n    let query = term\n\n    /**\n     * In case we are using crossSelling, we need to modify the search\n     * we will be performing on our search engine. The idea in here\n     * is to use the cross selling API for fetching the productIds our\n     * search will return for us.\n     * Doing this two request workflow makes it possible to have cross\n     * selling with Search features, like pagination, internationalization\n     * etc\n     */\n    if (crossSelling) {\n      const products = await ctx.clients.commerce.catalog.products.crossselling({\n        type: FACET_CROSS_SELLING_MAP[crossSelling.key],\n        productId: crossSelling.value,\n      })\n\n      query = `product:${\n        products.map((x) => x.productId).slice(0, first).join(\";\")\n      }`\n    }\n\n    const after = maybeAfter ? Number(maybeAfter) : 0\n    const searchArgs = {\n      page: Math.ceil(after / first),\n      count: first,\n      query,\n      sort: SORT_MAP[sort ?? 'score_desc'],\n      selectedFacets: selectedFacets?.flatMap(transformSelectedFacet) ?? [],\n    }\n\n    return searchArgs\n  },\n  allProducts: async (\n    _: unknown,\n    { first, after: maybeAfter }: QueryAllProductsArgs,\n    ctx: Context\n  ) => {\n    const {\n      clients: { search },\n    } = ctx\n\n    const after = maybeAfter ? Number(maybeAfter) : 0\n    const products = await search.products({\n      page: Math.ceil(after / first),\n      count: first,\n    })\n\n    const skus = products.products\n      .map((product) => product.items.map((sku) => enhanceSku(sku, product)))\n      .flat()\n      .filter((sku) => sku.sellers.length > 0)\n\n    return {\n      pageInfo: {\n        hasNextPage: products.pagination.after.length > 0,\n        hasPreviousPage: products.pagination.before.length > 0,\n        startCursor: '0',\n        endCursor: products.recordsFiltered.toString(),\n        totalCount: products.recordsFiltered,\n      },\n      // after + index is bigger than after+first itself because of the array flat() above\n      edges: skus.map((sku, index) => ({\n        node: sku,\n        cursor: (after + index).toString(),\n      })),\n    }\n  },\n  allCollections: async (\n    _: unknown,\n    { first, after: maybeAfter }: QueryAllCollectionsArgs,\n    ctx: Context\n  ) => {\n    const {\n      clients: { commerce },\n    } = ctx\n\n    const after = maybeAfter ? Number(maybeAfter) : 0\n\n    const [brands, tree] = await Promise.all([\n      commerce.catalog.brand.list(),\n      commerce.catalog.category.tree(),\n    ])\n\n    const categories: Array<CategoryTree & { level: number }> = []\n    const dfs = (node: CategoryTree, level: number) => {\n      categories.push({ ...node, level })\n\n      for (const child of node.children) {\n        dfs(child, level + 1)\n      }\n    }\n\n    for (const node of tree) {\n      dfs(node, 0)\n    }\n\n    const collections = [\n      ...brands\n        .filter((brand) => brand.isActive)\n        .map((x) => ({ ...x, type: 'brand' })),\n      ...categories,\n    ]\n\n    const validCollections = collections\n      // Nullable slugs may cause one route to override the other\n      .filter((node) => Boolean(StoreCollection.slug(node, null, ctx, null)))\n\n    return {\n      pageInfo: {\n        hasNextPage: validCollections.length - after > first,\n        hasPreviousPage: after > 0,\n        startCursor: '0',\n        endCursor: (\n          Math.min(first, validCollections.length - after) - 1\n        ).toString(),\n        totalCount: validCollections.length,\n      },\n      edges: validCollections\n        .slice(after, after + first)\n        .map((node, index) => ({\n          node,\n          cursor: (after + index).toString(),\n        })),\n    }\n  },\n}\n","import type { Resolver } from '..'\n\nexport const StoreReview: Record<string, Resolver> = {\n  reviewRating: () => ({\n    ratingValue: 5,\n    bestRating: 5,\n  }),\n  author: () => ({\n    name: '',\n  }),\n}\n","import { enhanceSku } from '../utils/enhanceSku'\nimport type { Resolver } from '..'\nimport type { SearchArgs } from '../clients/search'\nimport type { Facet } from '../clients/search/types/FacetSearchResult'\n\ntype Root = Omit<SearchArgs, 'type'>\n\nconst isRootFacet = (facet: Facet) => facet.key === 'category-1'\n\nexport const StoreSearchResult: Record<string, Resolver<Root>> = {\n  suggestions: async (searchArgs, _, ctx) => {\n    const {\n      clients: { search },\n    } = ctx\n\n    // If there's no search query, suggest the most popular searches.\n    if (!searchArgs.query) {\n      const topSearches = await search.topSearches()\n\n      return {\n        terms: topSearches.searches.map((item) => ({\n          value: item.term,\n          count: item.count,\n        })),\n        products: [],\n      }\n    }\n\n    const terms = await search.suggestedTerms(searchArgs)\n    const products = await search.products(searchArgs)\n\n    const skus = products.products\n      .map((product) => {\n        const [maybeSku] = product.items\n\n        return maybeSku && enhanceSku(maybeSku, product)\n      })\n      .filter((sku) => !!sku)\n\n    const { searches } = terms\n\n    return {\n      terms: searches.map((item) => ({ value: item.term, count: item.count })),\n      products: skus,\n    }\n  },\n  products: async (searchArgs, _, ctx) => {\n    const {\n      clients: { search, sp },\n    } = ctx\n\n    const products = await search.products(searchArgs)\n\n    // Raise event on search's analytics API when performing\n    // a full text search.\n    if (searchArgs.query) {\n      sp.sendEvent({\n        type: 'search.query',\n        text: searchArgs.query,\n        misspelled: products.correction.misspelled,\n        match: products.recordsFiltered,\n        operator: products.operator,\n      }).catch(console.error)\n    }\n\n    const skus = products.products\n      .map((product) => {\n        const [maybeSku] = product.items\n\n        return maybeSku && enhanceSku(maybeSku, product)\n      })\n      .filter((sku) => !!sku)\n\n    return {\n      pageInfo: {\n        hasNextPage: products.pagination.after.length > 0,\n        hasPreviousPage: products.pagination.before.length > 0,\n        startCursor: '0',\n        endCursor: products.recordsFiltered.toString(),\n        totalCount: products.recordsFiltered,\n      },\n      edges: skus.map((sku, index) => ({\n        node: sku,\n        cursor: index.toString(),\n      })),\n    }\n  },\n  facets: async (searchArgs, _, ctx) => {\n    const {\n      clients: { search: is },\n    } = ctx\n\n    ctx.storage.searchArgs = searchArgs\n\n    const { facets = [] } = await is.facets(searchArgs)\n\n    const isCollectionPage = !searchArgs.query\n\n    const filteredFacets = facets\n      // Remove root facet on category pages\n      .filter((facet) => !isCollectionPage || !isRootFacet(facet))\n\n    return filteredFacets\n  },\n}\n","import type { Resolver } from '..'\n\ntype Root = { title?: string; description?: string; canonical?: string }\n\nexport const StoreSeo: Record<string, Resolver<Root>> = {\n  title: ({ title }) => title ?? '',\n  description: ({ description }) => description ?? '',\n  canonical: ({ canonical }) => canonical ?? '',\n  titleTemplate: () => '',\n}\n","import { getClients } from './clients'\nimport type { SearchArgs } from './clients/search'\nimport { getLoaders } from './loaders'\nimport { StoreAggregateOffer } from './resolvers/aggregateOffer'\nimport { StoreAggregateRating } from './resolvers/aggregateRating'\nimport { StoreCollection } from './resolvers/collection'\nimport {\n  StoreFacet,\n  StoreFacetBoolean,\n  StoreFacetRange,\n} from './resolvers/facet'\nimport { StoreFacetValueBoolean } from './resolvers/faceValue'\nimport { Mutation } from './resolvers/mutation'\nimport { ObjectOrString } from './resolvers/objectOrString'\nimport { StoreOffer } from './resolvers/offer'\nimport { StoreProduct } from './resolvers/product'\nimport { StoreProductGroup } from './resolvers/productGroup'\nimport { StorePropertyValue } from './resolvers/propertyValue'\nimport { Query } from './resolvers/query'\nimport { StoreReview } from './resolvers/review'\nimport { StoreSearchResult } from './resolvers/searchResult'\nimport { StoreSeo } from './resolvers/seo'\nimport ChannelMarshal from './utils/channel'\nimport type { Loaders } from './loaders'\nimport type { Clients } from './clients'\nimport type { Channel } from './utils/channel'\n\nexport interface Options {\n  platform: 'vtex'\n  account: string\n  environment: 'vtexcommercestable' | 'vtexcommercebeta'\n  // Default sales channel to use for fetching products\n  channel: string\n  locale: string\n  hideUnavailableItems: boolean\n  flags?: FeatureFlags\n}\n\ninterface FeatureFlags {\n  enableOrderFormSync?: boolean\n}\n\nexport interface Context {\n  clients: Clients\n  loaders: Loaders\n  /**\n   * @description Storage updated at each request.\n   *\n   * Use this datastructure to store and share small values in the context.\n   * Use it with caution since dependecy injection leads to a more complex code\n   * */\n  storage: {\n    channel: Required<Channel>\n    locale: string\n    flags: FeatureFlags\n    searchArgs?: Omit<SearchArgs, 'type'>\n  }\n  headers: Record<string, string>\n}\n\nexport type Resolver<R = unknown, A = unknown, Return = any> = (\n  root: R,\n  args: A,\n  ctx: Context,\n  info: any\n) => Return\n\nconst Resolvers = {\n  StoreCollection,\n  StoreAggregateOffer,\n  StoreProduct,\n  StoreSeo,\n  StoreFacet,\n  StoreFacetBoolean,\n  StoreFacetRange,\n  StoreFacetValueBoolean,\n  StoreOffer,\n  StoreAggregateRating,\n  StoreReview,\n  StoreProductGroup,\n  StoreSearchResult,\n  StorePropertyValue,\n  ObjectOrString,\n  Query,\n  Mutation,\n}\n\nexport const getContextFactory =\n  (options: Options) =>\n  (ctx: any): Context => {\n    ctx.storage = {\n      channel: ChannelMarshal.parse(options.channel),\n      flags: options.flags ?? {},\n      locale: options.locale,\n    }\n    ctx.clients = getClients(options, ctx)\n    ctx.loaders = getLoaders(options, ctx)\n\n    return ctx\n  }\n\nexport const getResolvers = (_: Options) => Resolvers\n","import { print } from 'graphql'\n\nimport AggregateOffer from './aggregateOffer.graphql'\nimport AggregateRating from './aggregateRating.graphql'\nimport Author from './author.graphql'\nimport Brand from './brand.graphql'\nimport Breadcrumb from './breadcrumb.graphql'\nimport Collection from './collection.graphql'\nimport Facet from './facet.graphql'\nimport Image from './image.graphql'\nimport Mutation from './mutation.graphql'\nimport Offer from './offer.graphql'\nimport Order from './order.graphql'\nimport Organization from './organization.graphql'\nimport PageInfo from './pageInfo.graphql'\nimport Product from './product.graphql'\nimport ProductGroup from './productGroup.graphql'\nimport Query from './query.graphql'\nimport Review from './review.graphql'\nimport Seo from './seo.graphql'\nimport Cart from './cart.graphql'\nimport Status from './status.graphql'\nimport PropertyValue from './propertyValue.graphql'\nimport Person from './person.graphql'\nimport ObjectOrString from './objectOrString.graphql'\nimport Session from './session.graphql'\n\nexport const typeDefs = [\n  Query,\n  Mutation,\n  Brand,\n  Breadcrumb,\n  Collection,\n  Facet,\n  Image,\n  PageInfo,\n  Product,\n  Seo,\n  Offer,\n  AggregateRating,\n  Review,\n  Author,\n  ProductGroup,\n  Organization,\n  AggregateOffer,\n  Order,\n  Cart,\n  Status,\n  PropertyValue,\n  Person,\n  ObjectOrString,\n  Session,\n]\n  .map(print)\n  .join('\\n')\n","import { makeExecutableSchema } from '@graphql-tools/schema'\n\nimport {\n  getContextFactory as getContextFactoryVTEX,\n  getResolvers as getResolversVTEX,\n} from './platforms/vtex'\nimport { typeDefs } from './typeDefs'\nimport type { Options as OptionsVTEX } from './platforms/vtex'\n\nexport * from './__generated__/schema'\nexport * from './platforms/errors'\n\nexport type Options = OptionsVTEX\n\nconst platforms = {\n  vtex: {\n    getResolvers: getResolversVTEX,\n    getContextFactory: getContextFactoryVTEX,\n  },\n}\n\nexport const getTypeDefs = () => typeDefs\n\nexport const getResolvers = (options: Options) =>\n  platforms[options.platform].getResolvers(options)\n\nexport const getContextFactory = (options: Options) =>\n  platforms[options.platform].getContextFactory(options)\n\nexport const getSchema = async (options: Options) =>\n  makeExecutableSchema({\n    resolvers: getResolvers(options),\n    typeDefs,\n  })\n"],"names":["fetchAPI","info","init","response","fetch","ok","status","json","undefined","console","error","text","Error","BASE_INIT","method","headers","VtexCommerce","account","environment","ctx","base","catalog","salesChannel","sc","brand","list","category","tree","depth","portal","pagetype","slug","products","crossselling","type","productId","groupByProduct","params","URLSearchParams","storage","channel","toString","checkout","simulation","args","body","JSON","stringify","orderForm","id","refreshOutdatedData","updateOrderFormItems","orderItems","allowOutdatedData","setCustomData","appId","key","value","region","postalCode","country","session","search","set","cookie","POLICY_KEY","REGION_KEY","CHANNEL_KEYS","Set","IntelligentSearch","hideUnavailableItems","getPolicyFacet","getRegionFacet","regionId","addDefaultFacets","facets","withDefaltFacets","filter","has","policyFacet","find","regionFacet","push","query","page","count","sort","selectedFacets","fuzzy","locale","append","pathname","map","join","suggestedTerms","topSearches","THIRTY_MINUTES_S","ONE_YEAR_S","randomUUID","Math","random","toFixed","timelapsed","past","Date","now","createId","expiresSecond","payload","createdAt","user","anonymous","SP","_","sendEvent","options","agent","getClients","commerce","sp","getSalesChannelLoader","clients","loader","channels","Promise","all","DataLoader","CONCURRENT_REQUESTS_MAX","getSimulationLoader","limit","pLimit","allItems","items","flat","simulated","reduce","acc","item","index","requestIndex","length","Array","fill","itemsIndices","curr","__","slice","Boolean","limited","maxBatchSize","enhanceSku","product","isVariantOf","FastStoreError","constructor","extensions","message","name","BadRequestError","NotFoundError","isFastStoreError","isNotFoundError","isBadRequestError","getSkuLoader","skuIds","skuBySkuId","sku","itemId","skus","skuId","missingSkus","collectionPageTypes","isCollectionPageType","x","pageType","toLowerCase","getCollectionLoader","slugs","batch","getLoaders","skuLoader","simulationLoader","collectionLoader","salesChannelLoader","inStock","offer","AvailableQuantity","price","spotPrice","sellingPrice","Price","availability","available","bestOfferFirst","a","b","inStockOrderFormItem","itemAvailability","StoreAggregateOffer","highPrice","offers","availableOffers","highOffer","lowPrice","lowOffer","offerCount","priceCurrency","loaders","load","CurrencyCode","StoreAggregateRating","ratingValue","reviewCount","from","to","removeDiacritics","str","newStr","i","replace","RegExp","charAt","slugifySpecialCharacters","slugify","noCommas","replaced","slugified","isBrand","slugifyRoot","root","URL","url","StoreCollection","seo","title","description","metaTagDescription","Title","MetaTagDescription","level","meta","split","segment","breadcrumbList","segments","collections","s","itemListElement","collection","position","numberOfItems","ChannelMarshal","parse","channelString","parsedChannel","FACET_CROSS_SELLING_MAP","buy","view","similars","viewAndBought","accessories","suggestions","transformSelectedFacet","channelFacets","parseRange","range","splitted","Number","isNaN","isCrossSelling","findCrossSelling","filtered","isArray","findSlug","findSkuId","findLocale","findChannel","facet","min","array","cmp","best","StoreFacet","__resolveType","StoreFacetBoolean","label","values","localeCompare","StoreFacetRange","searchArgs","selectedRange","globalMin","selected","absolute","max","globalMax","StoreFacetValueBoolean","quantity","md5","crypto","createHash","update","digest","VALUE_REFERENCES","attachment","specification","attachmentToPropertyValue","content","valueReference","getPropertyId","isAttachment","getId","itemOffered","seller","identifier","additionalProperty","orderFormItemToOffer","listPrice","image","attachments","offerToOrderItemInput","groupById","get","Map","equals","storeOrder","pick","orderFormItems","storeOrderItems","acceptedOffer","isSameOrder","orderNumber","orderFormId","orderItemsAreSync","deepEquals","orderFormToCart","form","order","messages","toUpperCase","getOrderFormEtag","setOrderFormEtag","err","isOrderFormStale","faststoreData","customData","customApps","app","oldEtag","fields","cartEtag","newEtag","validateCart","cart","enableOrderFormSync","flags","isStale","newOrderForm","browserItemsById","originItemsById","browserItems","originItems","itemsToAdd","itemsToUpdate","maybeOriginItem","itemsToDelete","changes","updatedOrderForm","then","validateSession","oldSession","String","regionData","sessionData","resolve","catch","profile","namespaces","store","newSession","currency","code","currencyCode","symbol","currencySymbol","countryCode","person","email","givenName","firstName","familyName","lastName","Mutation","ObjectOrString","GraphQLScalarType","parseValue","toObjectOrString","serialize","parseLiteral","ast","kind","Kind","STRING","getValueAsObjectOrString","e","isSearchItem","isOrderFormItem","StoreOffer","priceValidUntil","PriceValidUntil","itemCondition","sellerId","ListPrice","attachmentsValues","canonicalFromProduct","linkText","enhanceCommercialOffer","DEFAULT_IMAGE","imageText","imageUrl","getSlug","link","getPath","nonEmptyArray","StoreProduct","productID","productName","canonical","categories","reverse","categoryPath","images","alternateName","gtin","referenceId","Value","review","aggregateRating","sellers","commertialOffer","variations","specifications","propertyValueSpecifications","flatMap","propertyValueAttachments","BLOCKED_SPECIFICATIONS","StoreProductGroup","hasVariant","productGroupID","specificationGroups","specificationGroup","StorePropertyValue","propertyID","mutateChannelContext","mutateLocaleContext","SORT_MAP","price_desc","price_asc","orders_desc","name_desc","name_asc","release_desc","discount_desc","score_desc","pickBestSku","offersBySku","o1","o2","isValidSkuId","Query","locator","pop","route","first","after","maybeAfter","term","crossSelling","ceil","allProducts","pageInfo","hasNextPage","pagination","hasPreviousPage","before","startCursor","endCursor","recordsFiltered","totalCount","edges","node","cursor","allCollections","brands","dfs","child","children","isActive","validCollections","StoreReview","reviewRating","bestRating","author","isRootFacet","StoreSearchResult","terms","searches","maybeSku","misspelled","correction","match","operator","is","isCollectionPage","filteredFacets","StoreSeo","titleTemplate","Resolvers","getContextFactory","getResolvers","typeDefs","Brand","Breadcrumb","Collection","Facet","Image","PageInfo","Product","Seo","Offer","AggregateRating","Review","Author","ProductGroup","Organization","AggregateOffer","Order","Cart","Status","PropertyValue","Person","Session","print","platforms","vtex","getResolversVTEX","getContextFactoryVTEX","getTypeDefs","platform","getSchema","makeExecutableSchema","resolvers"],"mappings":"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"}